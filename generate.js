const fs = require('fs');
const Path = require('path');
const objdumpParser = require('./wrapper-generator/objdump-parser');
const fnToWrapper = require('./wrapper-generator/function-to-wrapper');

let symbolsFile = process.argv[2];
let className = process.argv[3];

if (!symbolsFile || !className) {
    console.error('Usage: node generate.js symbolsfile.txt classname');
    process.exit(1);
}

let symbols = fs.readFileSync(symbolsFile, 'utf-8');
let tree = objdumpParser(symbols);

let obj = tree.findClassByName(className);
if (!obj) {
    console.error(`Could not find object '${className}'. Are you sure it's linked in?`);
    process.exit(1);
}

let libraryName = className.toLowerCase();
let folder = Path.join(__dirname, 'output', 'jerryscript-mbed-' + libraryName + '-' + Date.now());
fs.mkdirSync(folder);

// Create the base files (-js.h and lib_*.h)
fs.writeFileSync(Path.join(folder, libraryName + '-js.h'), createJsH(libraryName, className), 'utf-8');
fs.writeFileSync(Path.join(folder, 'lib_' + libraryName + '.h'), createLibH(libraryName, className), 'utf-8');

// Now we can do interesting stuff...
let fns = tree.getPublicFunctionsFromClass(obj);

let members = fns.filter(fn => !fnToWrapper.isConstructor(obj, fn))
    .map(fn => fnToWrapper.fnToString(obj, fn, fns))
    .join('\n\n');

let ctors = fns.filter(fn => fnToWrapper.isConstructor(obj, fn))
    .map(fn => fnToWrapper.fnToString(obj, fn, fns))
    .join('\n\n');

fs.writeFileSync(Path.join(folder, libraryName + '-js.cpp'), createCpp(members + ctors), 'utf-8');

console.log('Done', folder);

function createJsH(libraryName, className) {
    let upper = libraryName.toUpperCase();
    return `/* Generated by https://github.com/janjongboom/mbed-js-wrapper-generator */

#ifndef _JERRYSCRIPT_MBED_${upper}_H
#define _JERRYSCRIPT_MBED_${upper}_H

#include "jerryscript-mbed-library-registry/wrap_tools.h"

DECLARE_CLASS_CONSTRUCTOR(${className});

#endif // _JERRYSCRIPT_MBED_${upper}_H
`;
}

function createLibH(libraryName, className) {
    let upper = libraryName.toUpperCase();

    return `/* Generated by https://github.com/janjongboom/mbed-js-wrapper-generator */

#ifndef _JERRYSCRIPT_MBED_LIB_${upper}_H
#define _JERRYSCRIPT_MBED_LIB_${upper}_H

#include "jerryscript-mbed-${libraryName}/${libraryName}-js.h"
#include "jerryscript-mbed-library-registry/wrap_tools.h"

DECLARE_JS_WRAPPER_REGISTRATION (${libraryName})
{
    REGISTER_CLASS_CONSTRUCTOR(${className});
}

#endif // _JERRYSCRIPT_MBED_LIB_${upper}_H
`;
}

function createCpp(code) {
    return `/* Generated by https://github.com/janjongboom/mbed-js-wrapper-generator */

#include "jerryscript-mbed-util/logging.h"
#include "jerryscript-mbed-library-registry/wrap_tools.h"

// @todo: Find the header file for this library and include it here...

${code}
`;
}
